/* _utilityClasses.scss */

@use "../design-tokens/breakPoint" as *;

/*
"Private" mixin to generate a set of utility classes
from either a list or map.
*/

@mixin _print-utility-classes($className, $source, $property) {
  @if type-of($source) == "map" {
    @each $key, $value in $source {
      &-#{$key} {
        #{$property}: $value !important;
      }
    }
  } @else if type-of($source) == "list" {
    @each $value in $source {
      &-#{$value} {
        #{$property}: $value !important;
      }
    }
  }
}

/*
"Public" mixin to generate utility classes and
responsive utility classes for all breakpoints
(which can be disabled).
*/

@mixin utility-classes($className, $source, $property, $responsive: true) {
  .#{$className} {
    @include _print-utility-classes($className, $source, $property);
  }

  @if $responsive {
    // fluid: medium, large, extra large

    @include breakpoint-m() {
      .m\:#{$className} {
        @include _print-utility-classes($className, $source, $property);
      }
    }

    @include breakpoint-l() {
      .l\:#{$className} {
        @include _print-utility-classes($className, $source, $property);
      }
    }

    @include breakpoint-xl() {
      .xl\:#{$className} {
        @include _print-utility-classes($className, $source, $property);
      }
    }

    // strict: medium, large, extra large

    @include breakpoint-only-s() {
      .only-s\:#{$className} {
        @include _print-utility-classes($className, $source, $property);
      }
    }

    @include breakpoint-only-m() {
      .only-m\:#{$className} {
        @include _print-utility-classes($className, $source, $property);
      }
    }

    @include breakpoint-only-l() {
      .only-l\:#{$className} {
        @include _print-utility-classes($className, $source, $property);
      }
    }
  }
}
